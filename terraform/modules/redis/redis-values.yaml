---
global:
  redis: {}

image:
  registry: docker.io
  repository: bitnami/redis
  tag: 6.2.6
  pullPolicy: IfNotPresent

architecture: standalone

sentinel:
  enabled: false

clusterDomain: cluster.local

networkPolicy:
  enabled: true
  allowExternal: true
  ingressNSMatchLabels: {}
  ingressNSPodMatchLabels: {}

serviceAccount:
  create: false

securityContext:
  enabled: true
  fsGroup: 1001
  runAsUser: 1001

## Use password authentication
auth:
  enabled: true
  password: "foo" # Overridden by Terraform

## Redis config file
## ref: https://redis.io/topics/config
##
commonConfiguration: |-
  # Enable AOF https://redis.io/topics/persistence#append-only-file
  appendonly yes
  # Disable RDB persistence, AOF persistence already enabled.
  save ""

redisPort: 6379

tls:
  enabled: false

master:
  disableCommands:
    - FLUSHALL
  resources:
    requests:
      memory: 192Mi
      cpu: 10m
    limits:
      memory: 192Mi
      cpu: 50m
  livenessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5

  ## Redis Master Service properties
  service:
    ##  Redis Master Service type
    type: ClusterIP
    port: 6379
  persistence:
    enabled: true
    path: /data
    ## Persist data to a persistent volume (Redis Master) - OVERRIDDEN IN TERRAFORM
    existingClaim: "foo"
    accessModes:
      - ReadWriteMany
    size: 500Mi
  statefulset:
    updateStrategy: RollingUpdate

metrics:
  enabled: false

volumePermissions:
  enabled: false
  image:
    registry: docker.io
    repository: bitnami/minideb
    tag: buster
    pullPolicy: Always
  resources: {}
