---
- hosts: localhost
  vars:
    HOME: "{{ lookup('env', 'HOME') }}"
    USER: "{{ lookup('env', 'USER') }}"
    ca_path_debian: /usr/local/share/ca-certificates
    ca_path:
      RedHat:
        6: /usr/local/share/ca-certificates
        7: /etc/pki/ca-trust/source/anchors
      Debian:
        7: '{{ ca_path_debian }}'
        8: '{{ ca_path_debian }}'
        18: '{{ ca_path_debian }}'
        19: '{{ ca_path_debian }}'
  vars_files:
    - vars.yml
  tasks:
    - name: Ensure bash aliases file exists
      copy:
        content: ""
        dest: "{{ HOME }}/.bash_aliases"
        force: no
        owner: "{{ USER }}"
        mode: 0660

    - name: Install bash aliases for standardised commands
      blockinfile:
        path: "{{ HOME }}/.bash_aliases"
        marker: "# {mark} PS2ALERTS ANSIBLE MANAGED BLOCK #"
        block: |
          ## API
          alias ps2alerts-api="cd {{ api_dir | realpath }}"
          alias ps2alerts-api-start="ansible-playbook {{ api_dir | realpath }}/provisioning/dev/start.yml"
          alias ps2alerts-api-stop="ansible-playbook {{ api_dir | realpath }}/provisioning/dev/stop.yml"
          alias ps2alerts-api-term="docker exec -it ps2alerts-api bash"
          alias ps2alerts-api-logs="docker logs -f ps2alerts-api"
          ## Website
          alias ps2alerts-website="cd {{ website_dir | realpath }}"
          alias ps2alerts-website-start="ansible-playbook {{ website_dir | realpath }}/provisioning/dev/start.yml"
          alias ps2alerts-website-stop="ansible-playbook {{ website_dir | realpath }}/provisioning/dev/stop.yml"
          alias ps2alerts-website-term="docker exec -it ps2alerts-website bash"
          alias ps2alerts-website-logs="docker logs -f ps2alerts-website"
          ## Websocket
          alias ps2alerts-websocket="cd {{ websocket_dir | realpath }}"
          alias ps2alerts-websocket-start="ansible-playbook {{ websocket_dir | realpath }}/provisioning/dev/start.yml"
          alias ps2alerts-websocket-start-full="ansible-playbook {{ websocket_dir | realpath }}/provisioning/dev/start-full.yml"
          alias ps2alerts-websocket-stop="ansible-playbook {{ websocket_dir | realpath }}/provisioning/dev/stop.yml"
          alias ps2alerts-websocket-dev="ps2alerts-websocket-stop && ps2alerts-websocket-start && docker logs -f ps2alerts-websocket"
          alias ps2alerts-websocket-term="docker exec -it ps2alerts-websocket bash"
          alias ps2alerts-websocket-logs="docker logs -f ps2alerts-websocket"
          ## Stack
          alias ps2alerts-stack="cd {{ stack_dir | realpath }}"
          alias ps2alerts-stack-start="ansible-playbook {{ stack_dir | realpath }}/start-dev.yml"
          alias ps2alerts-stack-stop="ansible-playbook {{ stack_dir | realpath }}/stop-dev.yml"
          ## Global Commands
          alias ps2alerts="{{ project_dir | realpath }}"
          alias ps2alerts-start="ps2alerts-stack-start && ps2alerts-api-start && ps2alerts-website-start && ps2alerts-websocket-start-full"
          alias ps2alerts-stop="ps2alerts-stack-stop && ps2alerts-api-stop && ps2alerts-website-stop && ps2alerts-websocket-stop"
          alias ps2alerts-logs-all="docker logs -f ps2alerts-api ps2alerts-website ps2alerts-websocket"
          alias ps2alerts-reprovision="sudo ansible-playbook {{ stack_dir | realpath }}/init.yml"
          alias ps2alerts-dev-db="ansible-playbook {{ stack_dir | realpath }}/ansible/import-dev-db.yml"

    # - name: Install ca-certificates package on RHEL systems
    #   yum:
    #     name: ca-certificates
    #     state: present
    #   when: ansible_os_family == "RedHat"

    # - name: Install ca-certificates package on Debian systems
    #   apt:
    #     name: ca-certificates
    #     state: present
    #     update_cache: yes
    #   when: ansible_os_family == "Debian"

    - name: Import hosts into /etc/hosts
      blockinfile:
        path: /etc/hosts
        marker: "# {mark} PS2ALERTS ANSIBLE MANAGED BLOCK #"
        block: |
          127.0.0.1 api.dev.ps2alerts.com
          127.0.0.1 wss.dev.ps2alerts.com
          127.0.0.1 router.dev.ps2alerts.com
          127.0.0.1 dev.ps2alerts.com
      become: yes

    - name: "Create {{ data_dir }} dir"
      file:
        path: "{{ data_dir }}"
        state: directory

    ## WIP WIP WIP
    - name: Make certs dir
      file:
        path: "{{ certs_dir }}"
        state: directory

    # - name: Start mkcert container and generate the certs
    #   docker_container:
    #     name: ps2alerts-mkcert
    #     image: vishnunair/docker-mkcert
    #     state: started
    #     env:
    #       domain: "dev.ps2alerts.com,api.dev.ps2alerts.com,wss.dev.ps2alerts.com"
    #     volumes:
    #       - "{{ certs_dir }}:/root/.local/share/mkcert"
    #     labels:
    #       traefik.enable: "false"

    # - name: Wait for certs to be generated (grab a snickers)
    #   wait_for:
    #     path: "{{ cert_dir }}/{{ item }}"
    #     state: present
    #   with_items:
    #     - dev.ps2alerts.com.pem
    #     - api.dev.ps2alerts.com.pem
    #     - wss.dev.ps2alerts.com.pem
    #     - rootCA.pem

    # - name: Copy certificate authority to trusted ca path of the os
    #   copy:
    #     src: "{{ item }}"
    #     dest: "{{ ca_path[ansible_os_family][ansible_distribution_major_version|int] }}/"
    #     owner: root
    #     group: root
    #     mode: 0644
    #   with_fileglob:
    #     - "{{ certs_dir }}*"
    #   notify:
    #     - update trusted ca debian
    #     - update trusted ca redhat

    # - name: Stop mkcert
    #   docker_container:
    #     name: ps2alerts-mkcert
    #     state: stopped

    - debug:
        msg: "Remember to source your '~/.bash_aliases' file or restart your terminal!"

  handlers:
    - name: update trusted ca debian
      shell: /usr/sbin/update-ca-certificates && echo "Certs updated!"
      when: ansible_os_family == "Debian"

    - name: update trusted ca redhat
      shell: /bin/update-ca-trust && echo "Certs updated!"
      when: ansible_os_family == "RedHat"
