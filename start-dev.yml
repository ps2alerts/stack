---
- hosts: localhost
  vars_files:
    - "{{ playbook_dir }}/vars.yml"
  tasks:
    - debug:
        msg: "========= ðŸš€ HOUSTON, WE ARE GO FOR LAUNCH ðŸš€ ========="

    - name: Install docker on localhost
      pip:
        name: docker
        state: present

    - name: Create docker network
      docker_network:
        name: ps2alerts
        state: present

    - name: Start Traefik Router
      docker_container:
        name: ps2alerts-router
        image: traefik:v2.9
        state: started
        recreate: yes
        ports:
          - 80:80
          - 443:443
          - 8080:8080
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock:ro
          - "{{ certs_dir }}:/etc/traefik/certs:ro"
          - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
          - ./traefik/dynamic_conf.yml:/etc/traefik/dynamic_conf.yml:ro
        networks:
          - name: "ps2alerts"

    - name: Start Database
      docker_container:
        name: ps2alerts-db
        image: mongo:6.0.5
        state: started
        volumes:
          - "{{ db_dir }}:/data/db"
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_DATABASE: ps2alerts
          MONGO_INITDB_ROOT_PASSWORD: "foobar" # Matches API's default
        ports:
          - 27017-27019:27017-27019
        networks:
          - name: "ps2alerts"
        labels:
          traefik.enable: "false"

    - name: Start Redis
      docker_container:
        name: ps2alerts-redis
        image: redis:6
        state: started
        volumes:
          - "{{ redis_dir }}:/data"
        ports:
          - 6379:6379
        networks:
          - name: "ps2alerts"
        labels:
          traefik.enable: "false"

    - name: Start RabbitMQ
      docker_container:
        name: ps2alerts-mq
        image: rabbitmq:3.8-management
        ports:
          - 4369:4369
          - 5672:5672
          - 15672:15672
          - 25672:25672
        volumes:
          - "{{ mq_dir }}:/var/lib/rabbitmq"
        networks:
          - name: "ps2alerts"
        labels:
          traefik.enable: "false"

    - name: Start Prometheus
      docker_container:
        name: ps2alerts-prom
        image: prom/prometheus
        state: started
        ports:
          - 9090:9090
        volumes:
          - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
          - "{{ monitoring_dir }}/prometheus:/prometheus"
        networks:
          - name: "ps2alerts"
        labels:
          traefik.enable: "false"

    - name: Start Alertmanager
      docker_container:
        name: ps2alerts-alertmanager
        image: prom/alertmanager
        state: started
        ports:
          - 9091:9093
        volumes:
          - ./monitoring/alertmanager/:/config
          - "{{ monitoring_dir }}/alertmanager:/data"
        command: --config.file=/config/alertmanager.yml --storage.path=/data
        networks:
          - name: "ps2alerts"
        labels:
          traefik.enable: "false"

    - name: Start Grafana
      docker_container:
        name: ps2alerts-grafana
        image: grafana/grafana
        state: started
        ports:
          - 9092:3000
        volumes:
          - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
          - "{{ monitoring_dir }}/grafana:/var/lib/grafana"
        networks:
          - name: "ps2alerts"
        labels:
          traefik.enable: "false"


    - name: Wait for Rabbit to be fully available...
      shell: curl --head --silent http://localhost:15672
      register: result
      until: result.stdout.find("200 OK") != -1
      retries: 20
      delay: 5

    - name: Create RabbitMQ ps2alerts Exchange
      rabbitmq_exchange:
        name: ps2alerts
        vhost: /
        login_user: guest
        login_password: "guest"

    - name: Create RabbitMQ ps2alerts-census Exchange
      rabbitmq_exchange:
        name: ps2alerts-census
        vhost: /
        login_user: guest
        login_password: "guest"
        exchange_type: fanout
        durable: no

    - name: Create RabbitMQ ps2alerts-topic Exchange
      rabbitmq_exchange:
        name: ps2alerts-topic
        vhost: /
        login_user: guest
        login_password: "guest"
        exchange_type: topic
        durable: yes

    - name: Create RabbitMQ census->topic exchange binding
      rabbitmq_binding:
        name: ps2alerts-census
        destination: ps2alerts-topic
        destination_type: exchange

